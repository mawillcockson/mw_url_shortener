# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 3.20.1
envlist = export_requirements,py37,py38,py39,py310,check,lint
isolated_build = True

[testenv]
# Causes virtualenv to upgrade pip, setuptools, and wheel
# https://tox.readthedocs.io/en/latest/config.html#conf-download
download = True
# Specifies a regex to match against sys.platform
# https://tox.readthedocs.io/en/latest/config.html#conf-platform
# NOTE:FUTURE::PLATFORMS use linux|win32 to add windows support
platform = linux|win32

# NOTE: This is definitely a hack
# Desire is to have the current pinned versions of packages in poetry.lock be
# used in the tests
# Currently, this "test" must run first, so that it generates the appropriate
# file for other tests to depend upon
[testenv:export_requirements]
whitelist_externals = poetry
commands = poetry export --dev --without-hashes --format requirements.txt --output {toxinidir}{/}test_requirements.txt

[testenv:py3{7,8,9,10}]
deps =
    -rtest_requirements.txt
    pytest-timeout
    pytest-cov
    pytest
commands =
    pytest {posargs}

[testenv:check]
# Hopefully means all linting activities are run, even if some fail
# The warnings in the docs are ominous, though:
# https://tox.readthedocs.io/en/latest/config.html#conf-ignore_errors
ignore_errors = True
deps =
    -rtest_requirements.txt
    isort
    black
    mypy
# Order commands by most important first
commands =
    mypy
    black --check .
    isort --check .

[testenv:lint]
# pylint uses older versions of isort, so it gets its own environment
deps = 
    -rtest_requirements.txt
    pytest
    pylint
commands =
    pylint mw_url_shortener tests
